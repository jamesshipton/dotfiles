[user]
  name  = James Shipton
  email = ionysis@gmail.com

[alias]
  a    = add
  aa   = add -A
  ap   = add --patch

  b    = branch
  bm   = branch --merged master
  bmd  = branch --merged develop
  bn   = branch --no-merged master
  bnd  = branch --no-merged develop
  ba   = branch -a
  bd   = branch -d
  bdd  = branch -D

  co   = checkout
  cob  = checkout -b
  cod  = checkout develop
  col  = checkout -
  com  = checkout master

  cam  = commit -am
  cm   = commit -m
  cv   = commit -v
  ca   = commit --amend
  cach = commit --amend -C HEAD

  cp   = cherry-pick

  ctags = !.git/hooks/ctags

  d    = diff
  ds   = diff --staged
  dst  = diff --stat

  f    = fetch --multiple origin --prune
  fh   = fetch --multiple heroku --prune
  fa   = fetch --all --prune

  fx   = "!sh -c 'git commit -m \"fixup! $(if [[ $0 =~ ^[0-9]+$ ]]; then LINE=$(($0-1)); else LINE=0; fi; git log HEAD~$((LINE)) -1 --format='\\''%s'\\'' $@)\"'"

  g    = grep -n --break

  l    = "!sh -c 'git log --pretty=format:\"%Cred%h%Creset -%C(auto)%d%Creset %s %C(white)(%cr)%Creset %C(yellow)%ae%Creset\" develop.. | cat -n;echo'"
  lm    = "!sh -c 'git log --pretty=format:\"%Cred%h%Creset -%C(auto)%d%Creset %s %C(white)(%cr)%Creset %C(yellow)%ae%Creset\" master.. | cat -n;echo'"
  lc   = "!sh -c 'git log --pretty=format:\"%Cred%h%Creset -%C(auto)%d%Creset %s %C(white)(%cr)%Creset %C(yellow)%ae%Creset\" --graph'"
  la   = "!sh -c 'git log --pretty=format:\"%Cred%h%Creset -%C(auto)%d%Creset %s %C(white)(%cr)%Creset %C(yellow)%ae%Creset\" --graph --all'"

  m    = merge
  mom  = merge origin/master
  moc  = "!sh -c 'git merge origin/$(git rev-parse --abbrev-ref HEAD)'"

  poc  = "!sh -c 'git push origin $(git rev-parse --abbrev-ref HEAD)'"
  pocf = "!sh -c 'git push origin -f $(git rev-parse --abbrev-ref HEAD)'"
  pom  = push origin master

  r    = rebase
  ra   = rebase --abort
  rc   = rebase --continue
  ri   = rebase --interactive --autosquash
  ril  = "!sh -c 'if [[ $0 =~ ^[0-9]+$ ]]; then LINE=HEAD~$(($(($0-1)))); else LINE=$0; fi; git rebase --interactive --autosquash $LINE'"
  rim  = rebase --interactive --autosquash master
  rs   = rebase --skip

  rf   = reflog --pretty='%cd %h %gd %gs'

  rt   = reset
  rth  = reset --hard
  rts  = reset --soft

  s   = status
  sh  = "!sh -c 'if [[ $0 =~ ^[0-9]+$ ]]; then LINE=$(($0-1)); else LINE=0; fi; git show HEAD~$(($LINE))'"

  start = "!git init && git commit --allow-empty -m 'Initial commit'"

[core]
  excludesfile = ~/.gitignore
  attributesfile = ~/.gitattributes
  editor = vim

[github]
  user = jamesshipton

[init]
  templatedir = ~/.git_template

[merge]

[color]
  ui = true

[credential]
  helper = osxkeychain
